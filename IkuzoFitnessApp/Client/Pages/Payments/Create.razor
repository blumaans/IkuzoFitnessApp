@page "/payments/create/"
@inject HttpClient _client
@inject NavigationManager _navManager

<h3 class="card-title">Payment Page</h3>
<hr />
<br />

<FormComponent ButtonText="Make Payment" payment="payment" OnValidSubmit="@CreatePayment" />


@* <EditForm Model="@payment" OnValidSubmit="CreatePayment">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label>Plan: </label>
        <div>
            <InputSelect @bind-Value="payment.Plan" class="form-control">
                <option value="1month - $SGD10">1month - $SGD10</option>
                <option value="3months - $SGD25">3months - $SGD25</option>
                <option value="6months - $SGD50">6months - $SGD50</option>
            </InputSelect>
            <ValidationMessage For="@(() => payment.PaymentType)" />
        </div>
    </div>
    <div class="form-group">
        <label>Type: </label>
        <div>
            <InputSelect @bind-Value="payment.PaymentType" class="form-control">
                <option value="Credit/Debit Card">Credit/Debit Card</option>
                <option value="PayPal">PayPal</option>
                <option value="ApplePay">ApplePay</option>
            </InputSelect>
            <ValidationMessage For="@(() => payment.PaymentType)" />
        </div>
    </div>
    <div class="form-group">
        <label>Holder Name: </label>
        <div>
            <InputText @bind-Value="payment.HolderName" class="form-control" />
            <ValidationMessage For="@(() => payment.HolderName)" />
        </div>
    </div>
    <div class="form-group">
        <label>Card Number: </label>
        <div>
            <InputText @bind-Value="payment.CardNumber" class="form-control" />
            <ValidationMessage For="@(() => payment.CardNumber)" />
        </div>
    </div>
    <div class="form-group">
        <label>CVV: </label>
        <div>
            <InputNumber @bind-Value="payment.CVV" class="form-control" />
            <ValidationMessage For="@(() => payment.CVV)" />
        </div>
    </div>
    <div class="form-group">
        <label>Expiration Date: </label>
        <div class="d-flex">
            <div class="mr-2">
                <label>Month</label>
                <InputSelect @bind-Value="payment.Month" class="form-control">
                    @for (int month = 1; month <= 12; month++)
                    {
                        <option value="@month.ToString("D2")">@month.ToString("D2")</option>
                    }
                </InputSelect>
            </div>
            <div>
                <label>Year</label>
                <InputSelect @bind-Value="payment.Year" class="form-control">
                    @for (int year = 2024; year <= 2029; year++)
                    {
                        <option value="@year.ToString()">@year</option>
                    }
                </InputSelect>
            </div>
        </div>
        <ValidationMessage For="@(() => payment.Month)" />
        <ValidationMessage For="@(() => payment.Year)" />
    </div>
    <button type="submit" class="btn btn-success btn-block">
        Make Payment
    </button>
</EditForm> *@

@code {
    Payment payment = new Payment();

    private async Task CreatePayment()
    {
        await _client.PostAsJsonAsync(Endpoints.PaymentsEndpoint, payment);
        _navManager.NavigateTo("/payments/");
    }
}
